section#parallax-computers.hero.is-large
  .hero-body
    .container
      .columns.is-mobile
        .column.is-12.is-right
          = form_for @user, url: create_user_users_path do |f|
            = f.invisible_captcha :subtitle
            - if @user.errors.any?
              #error_explanation
                h2 = "#{pluralize(@user.errors.count, "error")} prohibited this user from being saved:"
                ul
                  - @user.errors.full_messages.each do |message|
                    li = message
            .field.is-horizontal
              .field-label.is-normal
                label.label Фамилия
              .field-body
                .field
                  .control
                    = f.text_field :last_name, class: 'input is-medium'
            .field.is-horizontal
              .field-label.is-normal
                label.label Имя
              .field-body
                .field
                  .control
                    = f.text_field :first_name, class: 'input is-medium'
            .field.is-horizontal
              .field-label.is-normal
                label.label Отчество
              .field-body
                .field
                  .control
                    = f.text_field :middle_name, class: 'input is-medium'
            .field.is-horizontal
              .field-label.is-normal
                label.label Дата рождения
              .field-body
                .field
                  .control
                    = f.date_field :birthdate, class: 'input is-medium'
            .field.is-horizontal
              .field-label.is-normal
                label.label Пол
              .field-body
                .field
                  = f.label :sex_id, 'М', class: 'has-text-primary'
                  = f.check_box :sex_id, { class: 'switch is-medium is-outlined is-right' }, 2, 1
                  = f.label :sex_id, 'Ж', class: 'has-text-primary'

            .field.is-horizontal
              .field-label.is-normal
                label.label Телефон
              .field-body
                .field
                  .control.has-icons-left.has-icons-right
                    = f.telephone_field :phone, class: 'input is-medium', id: 'phone-number', maxlength: 14, placeholder: '+7 (XXX) XXX-XXXX', required: true
                    span.icon.is-medium.is-left
                      i.fa.fa-phone.fa-lg
                    span.icon.is-medium.is-right
                      i.fas.fa-check.fa-lg
            .field.is-horizontal
              .field-label.is-normal
                label.label &nbsp
              .field-body
                .field
                  .control
                    .buttons
                      = f.button 'Зарегистрировать', type: 'submit', class: 'button is-primary is-fullwidth'

      .columns.is-mobile
        #diag
        = render 'persons/graph'

javascript:
    document.addEventListener('keydown', function(e) {
        var $phone = document.getElementById('phone-number')
        var key = e.which || e.charCode || e.keyCode || 0;

        // Don't let them remove the starting '('
        if ($phone.value.length === 1 && (key === 8 || key === 46)) {
            $phone.value = ('(');
            return false;
        }
        // Reset if they highlight and type over first char.
        else if ($phone.value.charAt(0) !== '(') {
            $phone.value = ('(' + String.fromCharCode(e.keyCode) + '');
        }

        // Auto-format- do not expose the mask as the user begins to type
        if (key !== 8 && key !== 9) {
            if ($phone.value.length === 4) $phone.value = ($phone.value + ')')
            if ($phone.value.length === 5) $phone.value = ($phone.value + ' ')
            if ($phone.value.length === 9) $phone.value = ($phone.value + '-')
        }

        // Allow numeric (and tab, backspace, delete) keys only
        return (key === 8 ||
            key === 9 ||
            key === 46 ||
            (key >= 48 && key <= 57) ||
            (key >= 96 && key <= 105));
    })
