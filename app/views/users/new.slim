section.text-center
  .container
    .row
      .col-12.text-center
        = form_for @user, url: create_user_users_path do |f|
          = f.invisible_captcha :subtitle
          - if @user.errors.any?
            #error_explanation
              h2 = "#{pluralize(@user.errors.count, "error")} prohibited this user from being saved:"
              ul
                - @user.errors.full_messages.each do |message|
                  li = message

          .input-group.mb-3
            .input-group-prepend.w-50
              span.input-group-text.w-100 Фамилия
            = f.text_field :last_name, type: 'text', class: 'form-control'
          .input-group.mb-3
            .input-group-prepend.w-50
              span.input-group-text.w-100 Имя
            = f.text_field :first_name, type: 'text', class: 'form-control'
          .input-group.mb-3
            .input-group-prepend.w-50
              span.input-group-text.w-100 Отчество
            = f.text_field :middle_name, type: 'text', class: 'form-control'
          .input-group.mb-3
            .input-group-prepend.w-50
              span.input-group-text.w-100 Дата рождения
            = f.date_field :birthdate, class: 'form-control'
          .input-group.mb-3
            .input-group-prepend.w-50
              span.input-group-text.w-100 Пол
            = f.collection_select :sex_id, Sex.all_cached, :id, :name, class: 'form-control'
          .input-group.mb-3
            .input-group-prepend.w-50
              span.input-group-text.w-100 Телефон
            = f.telephone_field :phone, type: 'text', class: 'form-control', id: 'phone-number', maxlength: 14, placeholder: '+7 (XXX) XXX-XXXX', required: true

          = f.submit 'Зарегистрировать', class: 'btn btn-primary'

    .row
      #diag
      = render 'persons/graph'

javascript:
    $('#phone-number')

        .keydown(function (e) {
            var key = e.which || e.charCode || e.keyCode || 0;
            $phone = $(this);

            // Don't let them remove the starting '('
            if ($phone.val().length === 1 && (key === 8 || key === 46)) {
                $phone.val('(');
                return false;
            }
            // Reset if they highlight and type over first char.
            else if ($phone.val().charAt(0) !== '(') {
                $phone.val('(' + String.fromCharCode(e.keyCode) + '');
            }

            // Auto-format- do not expose the mask as the user begins to type
            if (key !== 8 && key !== 9) {
                if ($phone.val().length === 4) {
                    $phone.val($phone.val() + ')');
                }
                if ($phone.val().length === 5) {
                    $phone.val($phone.val() + ' ');
                }
                if ($phone.val().length === 9) {
                    $phone.val($phone.val() + '-');
                }
            }

            // Allow numeric (and tab, backspace, delete) keys only
            return (key == 8 ||
                key == 9 ||
                key == 46 ||
                (key >= 48 && key <= 57) ||
                (key >= 96 && key <= 105));
        })

        .bind('focus click', function () {
            $phone = $(this);

            if ($phone.val().length === 0) {
                $phone.val('(');
            } else {
                var val = $phone.val();
                $phone.val('').val(val); // Ensure cursor remains at the end
            }
        })

        .blur(function () {
            $phone = $(this);

            if ($phone.val() === '(') {
                $phone.val('');
            }
        });
